- name: Deploy docker-compose stack
  hosts: all
  become: true
  vars:
    # src_docker_compose: path on local machine
    # dest_docker_compose: path on remote machine
    # env_file_content: content of .env file
    # dest_env_file: path for .env file on remote machine
    # remote_user: the user on the remote machine
    # registry_host_url: "registry.com"
  tasks:
    - name: Ensure destination directory exists
      ansible.builtin.file:
        path: "{{ dest_docker_compose | dirname }}"
        state: directory
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
        mode: "0755"

    - name: Copy docker-compose.yml to remote
      ansible.builtin.copy:
        src: "{{ src_docker_compose }}"
        dest: "{{ dest_docker_compose }}"
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
        mode: "0644"

    - name: Copy .env file to remote
      ansible.builtin.copy:
        content: "{{ env_file_content }}"
        dest: "{{ dest_env_file }}"
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
        mode: "0600"

    - name: "Login to AWS ECR"
      block:
        - name: Get ECR login password
          command: "aws ecr get-login-password"
          register: ecr_login
          changed_when: false

        - name: Login to ECR
          command: "docker login --username AWS --password {{ ecr_login.stdout }} {{ registry_host_url }}"
          no_log: true
          changed_when: false
      when: aws_ecr_host is defined
      become_user: "{{ remote_user }}"
      rescue:
        - name: Handle login failure
          fail:
            msg: "Failed to login to AWS ECR. Please check your credentials."


#    - name: Run docker-compose up
#      community.docker.docker_compose_v2:
#        project_src: "{{ dest_docker_compose | dirname }}"
#        state: present
#        pull: always
#      become_user: "{{ remote_user }}"
